StockDeductionTrigger.apxt  code

trigger StockDeductionTrigger on HandsMen_Orders__c (after insert, after update) {
    Set<Id> productIds = new Set<Id>();

    for (HandsMen_Orders__c orders : Trigger.new) {
        if (orders.Status__c == 'Confirmed' && orders.HandsMen_Product__c != null) {
            productIds.add(orders.HandsMen_Product__c);
        }
    }

    if (productIds.isEmpty()) return;

    // Query related inventories based on product
    Map<Id, Inventory__c> inventoryMap = new Map<Id, Inventory__c>(
        [SELECT Id, Stock_Quantity__c, HandsMen_Product__c 
         FROM Inventory__c 
         WHERE HandsMen_Product__c IN :productIds]
    );

    List<Inventory__c> inventoriesToUpdate = new List<Inventory__c>();

    for (HandsMen_Orders__c orders : Trigger.new) {
        if (orders.Status__c == 'Confirmed' && orders.HandsMen_Product__c != null) {
            for (Inventory__c inv : inventoryMap.values()) {
                if (inv.HandsMen_Product__c == orders.HandsMen_Product__c) {
                    // Check if enough stock is available
                    if (inv.Stock_Quantity__c >= orders.Quantity__c) {
                        inv.Stock_Quantity__c -= orders.Quantity__c;
                        inventoriesToUpdate.add(inv);
                    } else {
                        // Optional: Add error to prevent saving the order
                        orders.addError('Not enough stock available for the selected product.');
                    }
                    break;
                }
            }
        }
    }

    if (!inventoriesToUpdate.isEmpty()) {
        update inventoriesToUpdate;
    }
}


